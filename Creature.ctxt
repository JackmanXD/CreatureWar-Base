#BlueJ class context
comment0.target=Creature
comment0.text=\r\n\ Abstract\ class\ Creature\ -\ \r\n\ The\ creature\ is\ the\ main\ class\ from\ which\ all\ other\ battling\ creatures\ derive.\r\n\ It\ is\ the\ creature's\ job\ to\ maintain\ current\ health\ values\ in\ response\ to\ \r\n\ requests\ to\ takeDamage.\ It\ also\ must\ report\ if\r\n\ the\ creature\ is\ alive\ or\ dead.\ The\ creature\ is\ also\ responsible\ for\ calculating\r\n\ damage\ delivered\ based\ on\ the\ creature's\ strength\ (1\ to\ str)\ \r\n\ \r\n\ \ "Battle\ is\ the\ Great\ Redeemer.\ \r\n\ \ It\ is\ the\ fiery\ crucible\ in\ which\ true\ heroes\ are\ forged.\ \r\n\ \ The\ one\ place\ where\ all\ men\ truly\ share\ the\ same\ rank,\ \r\n\ \ regardless\ of\ what\ kind\ of\ parasitic\ scum\ they\ were\ going\ in."\ \r\n\ \ -\ Master\ Sergeant\ Farell\r\n\ \r\n\ @author\ Jack\ Henry\ Protopapa\r\n\ @version\ 0.01\r\n
comment1.params=s\ h
comment1.target=Creature(int,\ int)
comment1.text=\r\n\ Create\ a\ creature\ with\ a\ given\ strength\ and\ hit\ point\ level.\ \r\n\ Store\ max\ hitpoints\ to\ allow\ for\ healing\ to\ be\ implemented\ later\r\n\ Heals\ must\ never\ allow\ for\ more\ hit\ points\ than\ the\ creature\ started\r\n\ with\r\n\ @param\ str\ the\ strength\ of\ the\ creature,\ used\ to\ calculate\ damage\r\n\ @param\ hp\ the\ health\ of\ the\ creature\ at\ the\ start\ of\ the\ simulation,\ and\ the\ current\ health\ levels\ during\ battle\r\n
comment2.params=
comment2.target=int\ damage()
comment2.text=\r\n\ Allows\ a\ creature\ to\ determine\ how\ much\ damage\ it\ is\ causing\ in\ this\ round\ of\ battle\r\n\ @return\ a\ value\ between\ 1\ and\ str\ to\ be\ used\ to\ cause\ damage\ to\ another\ creature\r\n
comment3.params=
comment3.target=boolean\ isAlive()
comment3.text=\r\n\ Is\ this\ creature\ still\ capable\ of\ fighting?\r\n\ @return\ true\ when\ current\ hit\ point\ level\ is\ greater\ than\ zero\r\n
comment4.params=
comment4.target=boolean\ isDead()
comment4.text=\r\n\ Is\ this\ creature\ deceased?\r\n\ @return\ true\ when\ current\ hit\ point\ level\ is\ less\ than\ or\ equal\ to\ zero\r\n
comment5.params=damage
comment5.target=void\ takeDamage(int)
comment5.text=\r\n\ takeDamage\ receives\ a\ value\ for\ the\ amount\ of\ damage\ to\ subtract\ from\ \r\n\ the\ current\ total\ of\ hit\ points\r\n\ @param\ damage\ value\ to\ remove\ from\ hit\ point\ count\r\n
numComments=6
